# –ó–∞–¥–∞–Ω–∏–µ ‚Ññ8
# üìå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–∑–¥–∞—Ç—å API –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–º –∑–∞–¥–∞—á. –ö–∞–∂–¥–∞—è –∑–∞–¥–∞—á–∞ –¥–æ–ª–∂–Ω–∞
# —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ. –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å
# —É–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å (–≤—ã–ø–æ–ª–Ω–µ–Ω–∞/–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞).
# üìå API –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏:
# ‚óã GET /tasks - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–¥–∞—á.
# ‚óã GET /tasks/{id} - –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–∞–¥–∞—á—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.
# ‚óã POST /tasks - –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É.
# ‚óã PUT /tasks/{id} - –æ–±–Ω–æ–≤–ª—è–µ—Ç –∑–∞–¥–∞—á—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.
# ‚óã DELETE /tasks/{id} - —É–¥–∞–ª—è–µ—Ç –∑–∞–¥–∞—á—É —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º.
# üìå –î–ª—è –∫–∞–∂–¥–æ–π –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏
# –æ—Ç–≤–µ—Ç–∞. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É Pydantic.


from fastapi import FastAPI, Request
import logging
from typing import Optional
from pydantic import BaseModel
from fastapi.responses import HTMLResponse
from fastapi.templating import Jinja2Templates

FORMAT = '{levelname:<8} - {asctime} - >>> {msg}'
logging.basicConfig(format=FORMAT, style='{', level=logging.INFO)
logger = logging.getLogger(__name__)

app = FastAPI()
templates = Jinja2Templates(directory="./homework_5/templates")

# –î–ª—è –∫–∞–∂–¥–æ–π –∫–æ–Ω–µ—á–Ω–æ–π —Ç–æ—á–∫–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–≤–æ–¥–∏—Ç—å –≤–∞–ª–∏–¥–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–∞ –∏ –æ—Ç–≤–µ—Ç–∞.
# –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∏–±–ª–∏–æ—Ç–µ–∫—É Pydantic.


class Task(BaseModel):
    title: str
    description: Optional[str] = None
    status: Optional[bool] = False
#     –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å (–≤—ã–ø–æ–ª–Ω–µ–Ω–∞/–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞).
#     –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!


@app.get("/", response_class=HTMLResponse)
async def index(request: Request):
    logger.info('–û—Ç—Ä–∞–±–æ—Ç–∞–ª GET –∑–∞–ø—Ä–æ—Å(–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞).')
    return templates.TemplateResponse("item.html", {"request": request})


@app.get('/tasks/')
async def all_tasks():
    logger.info('–û—Ç—Ä–∞–±–æ—Ç–∞–ª GET –∑–∞–ø—Ä–æ—Å(–ø—Ä–æ—á–∏—Ç–∞–ª –ë–î –∏ –≤—ã–≤–µ–ª –≤—Å–µ –∑–∞–¥–∞—á–∏).')
    return {'—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –ë–î –Ω–∞ FastAPI –µ—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏': '—Å–æ–∑–¥–∞–ª –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏, —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—è–º –∑–∞–¥–∞—á–∏'}


@app.get('/tasks/{id_}')
async def returns_task(id_: int):
    logger.info(f'–û—Ç—Ä–∞–±–æ—Ç–∞–ª GET –∑–∞–ø—Ä–æ—Å(–≤–µ—Ä–Ω—É–ª –∑–∞–¥–∞—á—É —Å id = {id_}).')
    return {f'—Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å –ë–î –µ—â–µ –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏–ª–∏': f'—Å–æ–∑–¥–∞–ª –∫–æ–Ω–µ—á–Ω—ã–µ —Ç–æ—á–∫–∏, —Å–æ–≥–ª–∞—Å–Ω–æ —É—Å–ª–æ–≤–∏—è–º –∑–∞–¥–∞—á–∏. GET_task = {id_}'}


@app.post("/tasks/")
async def create_task(task: Task):
    logger.info('–û—Ç—Ä–∞–±–æ—Ç–∞–ª POST –∑–∞–ø—Ä–æ—Å(–¥–æ–±–∞–≤–∏–ª –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É).')
    return {"POST_new_task": task}


@app.put("/tasks/{task_id}")
async def update_task(task_id: int, task: Task):
    logger.info(f'–û—Ç—Ä–∞–±–æ—Ç–∞–ª PUT –∑–∞–ø—Ä–æ—Å(–æ–±–Ω–æ–≤–∏–ª –∑–∞–¥–∞—á—É —Å id = {task_id}).')
    return {"PUT_task_id": task_id, "task": task}


@app.delete('/tasks/{task_id}')
async def delete_item(task_id: int):
    logger.info(f'–û—Ç—Ä–∞–±–æ—Ç–∞–ª DELETE –∑–∞–ø—Ä–æ—Å (—É–¥–∞–ª–∏–ª –∑–∞–¥–∞—á—É —Å id = {task_id}).')
    return {'DELETE_task_id': task_id}


# –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–ª –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑—É—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é: http://127.0.0.1:8000/docs
# –¥–ª—è –∑–∞–ø—É—Å–∫–∞  uvicorn homework_5.task_8:app --reload

